{"ast":null,"code":"import React from'react';import{Redirect,useParams}from'react-router-dom';import{useQuery}from'@apollo/client';import SkillsList from'../components/SkillsList';import SkillForm from'../components/SkillForm';import{QUERY_SINGLE_PROFILE,QUERY_ME}from'../utils/queries';import Auth from'../utils/auth';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Profile=function Profile(){var _profile$skills;var _useParams=useParams(),profileId=_useParams.profileId;// If there is no `profileId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\nvar _useQuery=useQuery(profileId?QUERY_SINGLE_PROFILE:QUERY_ME,{variables:{profileId:profileId}}),loading=_useQuery.loading,data=_useQuery.data;// Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\nvar profile=(data===null||data===void 0?void 0:data.me)||(data===null||data===void 0?void 0:data.profile)||{};// Use React Router's `<Redirect />` component to redirect to personal profile page if username is yours\nif(Auth.loggedIn()&&Auth.getProfile().data._id===profileId){return/*#__PURE__*/_jsx(Redirect,{to:\"/me\"});}if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(!(profile!==null&&profile!==void 0&&profile.name)){return/*#__PURE__*/_jsx(\"h4\",{children:\"You need to be logged in to see your profile page. Use the navigation links above to sign up or log in!\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"card-header\",children:[profileId?\"\".concat(profile.name,\"'s\"):'Your',\" friends have endorsed these skills...\"]}),((_profile$skills=profile.skills)===null||_profile$skills===void 0?void 0:_profile$skills.length)>0&&/*#__PURE__*/_jsx(SkillsList,{skills:profile.skills,isLoggedInUser:!profileId&&true}),/*#__PURE__*/_jsx(\"div\",{className:\"my-4 p-4\",style:{border:'1px dotted #1a1a1a'},children:/*#__PURE__*/_jsx(SkillForm,{profileId:profile._id})})]});};export default Profile;","map":{"version":3,"sources":["E:/Git Repositories/Project-3/client/src/pages/Profile.js"],"names":["React","Redirect","useParams","useQuery","SkillsList","SkillForm","QUERY_SINGLE_PROFILE","QUERY_ME","Auth","Profile","profileId","variables","loading","data","profile","me","loggedIn","getProfile","_id","name","skills","length","border"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,kBAApC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAEA,OAASC,oBAAT,CAA+BC,QAA/B,KAA+C,kBAA/C,CAEA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,qBACpB,eAAsBP,SAAS,EAA/B,CAAQQ,SAAR,YAAQA,SAAR,CAEA;AACA,cAA0BP,QAAQ,CAChCO,SAAS,CAAGJ,oBAAH,CAA0BC,QADH,CAEhC,CACEI,SAAS,CAAE,CAAED,SAAS,CAAEA,SAAb,CADb,CAFgC,CAAlC,CAAQE,OAAR,WAAQA,OAAR,CAAiBC,IAAjB,WAAiBA,IAAjB,CAOA;AACA,GAAMC,CAAAA,OAAO,CAAG,CAAAD,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEE,EAAN,IAAYF,IAAZ,SAAYA,IAAZ,iBAAYA,IAAI,CAAEC,OAAlB,GAA6B,EAA7C,CAEA;AACA,GAAIN,IAAI,CAACQ,QAAL,IAAmBR,IAAI,CAACS,UAAL,GAAkBJ,IAAlB,CAAuBK,GAAvB,GAA+BR,SAAtD,CAAiE,CAC/D,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,KAAb,EAAP,CACD,CAED,GAAIE,OAAJ,CAAa,CACX,mBAAO,mCAAP,CACD,CAED,GAAI,EAACE,OAAD,SAACA,OAAD,WAACA,OAAO,CAAEK,IAAV,CAAJ,CAAoB,CAClB,mBACE,+HADF,CAMD,CAED,mBACE,oCACE,YAAI,SAAS,CAAC,aAAd,WACGT,SAAS,WAAMI,OAAO,CAACK,IAAd,OAAyB,MADrC,4CADF,CAMG,kBAAAL,OAAO,CAACM,MAAR,0DAAgBC,MAAhB,EAAyB,CAAzB,eACC,KAAC,UAAD,EACE,MAAM,CAAEP,OAAO,CAACM,MADlB,CAEE,cAAc,CAAE,CAACV,SAAD,EAAc,IAFhC,EAPJ,cAaE,YAAK,SAAS,CAAC,UAAf,CAA0B,KAAK,CAAE,CAAEY,MAAM,CAAE,oBAAV,CAAjC,uBACE,KAAC,SAAD,EAAW,SAAS,CAAER,OAAO,CAACI,GAA9B,EADF,EAbF,GADF,CAmBD,CAnDD,CAqDA,cAAeT,CAAAA,OAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport SkillsList from '../components/SkillsList';\r\nimport SkillForm from '../components/SkillForm';\r\n\r\nimport { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Profile = () => {\r\n  const { profileId } = useParams();\r\n\r\n  // If there is no `profileId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\r\n  const { loading, data } = useQuery(\r\n    profileId ? QUERY_SINGLE_PROFILE : QUERY_ME,\r\n    {\r\n      variables: { profileId: profileId },\r\n    }\r\n  );\r\n\r\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\r\n  const profile = data?.me || data?.profile || {};\r\n\r\n  // Use React Router's `<Redirect />` component to redirect to personal profile page if username is yours\r\n  if (Auth.loggedIn() && Auth.getProfile().data._id === profileId) {\r\n    return <Redirect to=\"/me\" />;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!profile?.name) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see your profile page. Use the navigation\r\n        links above to sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"card-header\">\r\n        {profileId ? `${profile.name}'s` : 'Your'} friends have endorsed these\r\n        skills...\r\n      </h2>\r\n\r\n      {profile.skills?.length > 0 && (\r\n        <SkillsList\r\n          skills={profile.skills}\r\n          isLoggedInUser={!profileId && true}\r\n        />\r\n      )}\r\n\r\n      <div className=\"my-4 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\r\n        <SkillForm profileId={profile._id} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}