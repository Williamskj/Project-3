{"ast":null,"code":"import _objectSpread from\"E:/Git Repositories/Project-3/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{ApolloClient,InMemoryCache,ApolloProvider,createHttpLink}from'@apollo/client';import{setContext}from'@apollo/client/link/context';import{BrowserRouter as Router,Route}from'react-router-dom';import Home from'./pages/Home';import Profile from'./pages/Profile';import Signup from'./pages/Signup';import Login from'./pages/Login';import Header from'./components/Header';import Footer from'./components/Footer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var httpLink=createHttpLink({uri:'/graphql'});var authLink=setContext(function(_,_ref){var headers=_ref.headers;// get the authentication token from local storage if it exists\nvar token=localStorage.getItem('id_token');// return the headers to the context so httpLink can read them\nreturn{headers:_objectSpread(_objectSpread({},headers),{},{authorization:token?\"Bearer \".concat(token):''})};});var client=new ApolloClient({link:authLink.concat(httpLink),cache:new InMemoryCache()});function App(){return/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-column justify-flex-start min-100-vh\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",children:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signup\",children:/*#__PURE__*/_jsx(Signup,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/me\",children:/*#__PURE__*/_jsx(Profile,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/profiles/:profileId\",children:/*#__PURE__*/_jsx(Profile,{})})]}),/*#__PURE__*/_jsx(Footer,{})]})})});}export default App;","map":{"version":3,"sources":["E:/Git Repositories/Project-3/client/src/App.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","BrowserRouter","Router","Route","Home","Profile","Signup","Login","Header","Footer","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App"],"mappings":"yHAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,YADF,CAEEC,aAFF,CAGEC,cAHF,CAIEC,cAJF,KAKO,gBALP,CAMA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,KAA+C,kBAA/C,CAEA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAGX,cAAc,CAAC,CAC9BY,GAAG,CAAE,UADyB,CAAD,CAA/B,CAIA,GAAMC,CAAAA,QAAQ,CAAGZ,UAAU,CAAC,SAACa,CAAD,MAAoB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC9C;AACA,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd,CACA;AACA,MAAO,CACLH,OAAO,gCACFA,OADE,MAELI,aAAa,CAAEH,KAAK,kBAAaA,KAAb,EAAuB,EAFtC,EADF,CAAP,CAMD,CAV0B,CAA3B,CAYA,GAAMI,CAAAA,MAAM,CAAG,GAAIvB,CAAAA,YAAJ,CAAiB,CAC9BwB,IAAI,CAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADwB,CAE9BY,KAAK,CAAE,GAAIzB,CAAAA,aAAJ,EAFuB,CAAjB,CAAf,CAKA,QAAS0B,CAAAA,GAAT,EAAe,CACb,mBACE,KAAC,cAAD,EAAgB,MAAM,CAAEJ,MAAxB,uBACE,KAAC,MAAD,wBACE,aAAK,SAAS,CAAC,2CAAf,wBACE,KAAC,MAAD,IADF,cAEE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,uBACE,KAAC,IAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,uBACE,KAAC,KAAD,IADF,EAJF,cAOE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,SAAlB,uBACE,KAAC,MAAD,IADF,EAPF,cAUE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,KAAlB,uBACE,KAAC,OAAD,IADF,EAVF,cAaE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,sBAAlB,uBACE,KAAC,OAAD,IADF,EAbF,GAFF,cAmBE,KAAC,MAAD,IAnBF,GADF,EADF,EADF,CA2BD,CAED,cAAeI,CAAAA,GAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport Profile from './pages/Profile';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className=\"flex-column justify-flex-start min-100-vh\">\r\n          <Header />\r\n          <div className=\"container\">\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n            <Route exact path=\"/me\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/profiles/:profileId\">\r\n              <Profile />\r\n            </Route>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}